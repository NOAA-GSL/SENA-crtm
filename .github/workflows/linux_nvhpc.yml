name: Linux NVHPC
# triggered events (push, pull_request) for the develop branch
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  ubuntu_build:
    name: Ubuntu NVHPC Build
    # Run on ubuntu-latest
    runs-on: ubuntu-latest

    env:
      NVIDIA_HPC_SDK_URL1: https://developer.download.nvidia.com/hpc-sdk/21.9/nvhpc-21-9_21.9_amd64.deb
      NVIDIA_HPC_SDK_URL2: https://developer.download.nvidia.com/hpc-sdk/21.9/nvhpc-2021_21.9_amd64.deb
      CC: nvc
      FC: nvfortran
      CXX: nvc

    steps:
      # Cache NVHPC SDK
      - name: Cache NVIDIA HPC SDK
        id: cache-nvchpc-sdk
        uses: actions/cache@v2
        with:
          path: /opt/nvhpc
          key: install-${{ env.NVIDIA_HPC_SDK_URL1 }}-${{ env.NVIDIA_HPC_SDK_URL2 }}-all

      # Install NVIDIA HPC SDK
      - name: Install NVIDIA HPC SDK
        if: steps.cache-intel-hpc-toolkit.outputs.cache-hit != 'true'
        run: |
          wget "$NVIDIA_HPC_SDK_URL1" "$NVIDIA_HPC_SDK_URL2"
          sudo apt-get install ./nvhpc-21-9_21.9_amd64.deb ./nvhpc-2021_21.9_amd64.deb

      # Debug install
      - name: Debug install
        run: |
          ls -l /opt
          ls -l /opt/nvidia
          ls -l /opt/nvidia/nvhpc

      # Check location of installed NVHPC compilers
      - name: Check compiler install
        run: |
          which nvc
          which nvfortran

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      # Test debug mode
      - name: Build crtm debug
        run: |
          cd ref
          rm -rf build
          mkdir build
          cd build
          export OMP_NUM_THREADS=4
          export CC=nvc
          export FC=nvfortran
          cmake -DCMAKE_BUILD_TYPE=debug ..
          make
          ctest --output-on-failure

      # Test release mode
      - name: Build crtm release
        run: |
          cd ref
          rm -rf build
          mkdir build
          cd build
          export OMP_NUM_THREADS=4
          export CC=nvc
          export FC=nvfortran
          cmake -DCMAKE_BUILD_TYPE=release ..
          make
          ctest --output-on-failure
